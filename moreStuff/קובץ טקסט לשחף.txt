using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Data;
using System.Data.SqlClient;

namespace SAD_20
{
    static class Program
    {
        public static System.Collections.Generic.List<Client> Clients;
        public static System.Collections.Generic.List<Feedback> Feedbacks;
        public static System.Collections.Generic.List<Equipment> Equipments;
        [STAThread]

        //שיטה שמחפשת עובד ברשימה לפי תעודת זהות
        public static Client seekClient(string email)
        {
            foreach (Client c in Clients)
            {
                if (c.get_email() == email)
                    return c;
            }
            return null;
        }


        public static void initLists()//מילוי הרשימות מתוך בסיס הנתונים
        {
            init_clients();//אתחול הרשימה של העובדים
            init_Feedbacks();
            init_Equipments();
        }

        public static void init_Equipments()//מילוי המערך מתוך בסיס הנתונים
        {
            SqlCommand c = new SqlCommand();
            c.CommandText = "EXECUTE dbo.Get_all_clients";
            SQL_CON SC = new SQL_CON();
            SqlDataReader rdr = SC.execute_query(c);

            Equipments = new List<Equipment>();

            while (rdr.Read())
            {
                WorkshopEquipment WE = (WorkshopEquipment)Enum.Parse(typeof(WorkshopEquipment), rdr.GetValue(1).ToString());
                Equipment Q = new Equipment((int)rdr.GetValue(0),WE, (int)rdr.GetValue(2), (int)rdr.GetValue(3));
                Equipments.Add(Q);
            }
        }//close init_Feedbacks
        public static void init_Feedbacks()//מילוי המערך מתוך בסיס הנתונים
        {
            SqlCommand c = new SqlCommand();
            c.CommandText = "EXECUTE dbo.Get_all_clients";
            SQL_CON SC = new SQL_CON();
            SqlDataReader rdr = SC.execute_query(c);

            Feedbacks = new List<Feedback>();
        
            while (rdr.Read())
            {
                Feedback F = new Feedback((int)rdr.GetValue(0), (DateTime)rdr.GetValue(1), (Rank)rdr.GetValue(2), rdr.GetValue(3).ToString(), rdr.GetValue(4).ToString(), (int)rdr.GetValue(5));
                Feedbacks.Add(F);
            }
        }//close init_Feedbacks

        public static void init_clients()//מילוי המערך מתוך בסיס הנתונים
        {
            SqlCommand c = new SqlCommand();
            c.CommandText = "EXECUTE dbo.Get_all_clients";
            SQL_CON SC = new SQL_CON();
            SqlDataReader rdr = SC.execute_query(c);

            Clients = new List<Client>();

            while (rdr.Read())
            {
                GenderType G = (GenderType)Enum.Parse(typeof(GenderType), rdr.GetValue(3).ToString());
                Client w = new Client(rdr.GetValue(0).ToString(), rdr.GetValue(1).ToString(), rdr.GetValue(2).ToString(), G, (DateTime)rdr.GetValue(4), rdr.GetValue(5).ToString(), rdr.GetValue(6).ToString(), rdr.GetValue(12).ToString());
                Clients.Add(w);
            }
        }
        static void Main()
        {
            Application.EnableVisualStyles();
            Application.SetCompatibleTextRenderingDefault(false);
            initLists();
            Application.Run(new Main());
        }
    }
}
